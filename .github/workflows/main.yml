# This is a basic workflow to help you get started with Actions

name: Build conda package

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Anaconda repository'
        required: true
        default: 'dtasev'
      label:
        description: 'Label'
        required: false
        default: 'unstable'
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: setup-conda
      uses: s-weigand/setup-conda@v1.0.3
      with:
        # Additional channels like 'conda-forge' which can be used to install packages
        conda-channels: 'dtasev,astra-toolbox/label/dev,defaults,conda-forge'
    - name: Make build-env
      run: |
        conda config --set always_yes yes --set changeps1 no
        conda init bash
        conda create -n build-env anaconda python=3.7
        conda activate build-env
        conda install conda-build conda-verify
#       run: |
#         wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
#         chmod +x Miniconda3-latest-Linux-x86_64.sh
#         bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda
#         rm Miniconda3-latest-Linux-x86_64.sh
#         eval "$(/opt/miniconda/bin/conda shell.bash hook)"
#         conda config --set always_yes yes --set changeps1 no
#         conda create -n build-env anaconda python=3.7
#         conda activate build-env
#         conda install conda-build conda-verify

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Build package
      run: |
        conda env list
        conda activate build-env
        conda build $GITHUB_WORKSPACE/conda
        anaconda upload --user ${{ github.event.inputs.repository }} -t ${{ secrets.ANACONDA_API_TOKEN }} $(conda build $GITHUB_WORKSPACE/conda --output) --label ${{ github.event.inputs.label }}
